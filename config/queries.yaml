---
- query: "sum(kube_pod_status_phase{}) by (phase) > 0"
  watchFor:  # watchFor will have only multiple value for status/count queries
  - key: phase
    val: "Pending"
    threshold: 10
    operator: lte
  - key: phase
    val: "Failed"
    threshold: 10
    operator: lte
- query: "sum(kube_node_status_condition{status='true'}) by (condition) > 0"
  watchFor:
  - key: condition
    val: "Ready"
    threshold: 6
    operator: eq
- query: "sum by (condition)(cluster_operator_conditions{condition!=''})"
  watchFor:
  - key: condition
    val: "Failing"
    threshold: 0
    operator: eq
  - key: condition
    val: "Degraded"
    threshold: 0
    operator: eq
  - key: condition
    val: "Available"
    threshold: 33
    operator: gte
- query: 'max(sum(container_memory_rss{namespace!="",name!="",container="prometheus"}) by (pod))/1073742000'   # 1073742000 is bytes per GiB
  watchFor:
  - key: nil
    val: nil
    threshold: 7 # GiB
    operator: lt
- query: 'max(sum(container_memory_working_set_bytes{namespace!="",name!="",container="prometheus"}) by (pod))/1073742000'   # 1073742000 is bytes per GiB,  if container_memory_working_set_bytes or container_memory_rss reached to the limits, the pod will be killed.But, container_memory_usage_bytes reaches to the limits, your pod will NOT get oom-killed
  watchFor:
  - key: nil
    val: nil
    threshold: 7 # GiB
    operator: lt
- query: "sum(kube_namespace_status_phase) by (phase)"
  watchFor:
  - key: phase
    val: "Terminating"
    threshold: 0
    operator: eq
- query: 'max(sum(container_memory_working_set_bytes{pod=~"ovnkube-master-.*",namespace="openshift-ovn-kubernetes",container=""}) by (pod, node))/1073742000'
  watchFor:
  - key: nil
    val: nil
    threshold: 4 # GiB
    operator: lte
- query: 'max(sum(container_memory_working_set_bytes{pod=~"ovnkube-node-.*",namespace="openshift-ovn-kubernetes",container=""}) by (pod, node))/1073742000'
  watchFor:
  - key: nil
    val: nil
    threshold: 4 # GiB
    operator: lte
- query: 'max(container_runtime_crio_containers_oom_total)'
  watchFor:
  - key: nil
    val: nil
    threshold: 3
    operator: lt
- query: 'max(ovnkube_master_skipped_nbctl_daemon_total)'
  watchFor:
  - key: nil
    val: nil
    threshold: 3
    operator: lt
- query: 'histogram_quantile(0.99, sum(rate(apiserver_request_duration_seconds_bucket{subresource!="log",verb!~"WATCH|WATCHLIST|PROXY"}[5m])) by(verb,le))'
  watchFor:
  - key: verb
    val: PATCH
    threshold: 0.50
    operator: lte
  - key: verb
    val: APPLY
    threshold: 0.50
    operator: lte
  - key: verb
    val: GET
    threshold: 0.50
    operator: lte
  - key: verb
    val: LIST
    threshold: 0.50
    operator: lte
  - key: verb
    val: POST
    threshold: 0.50
    operator: lte
  - key: verb
    val: PUT
    threshold: 0.50
    operator: lte
  - key: verb
    val: DELETE
    threshold: 0.50
    operator: lte
- query: 'sum(rate(apiserver_request_total[5m])) by(code)'
  watchFor:
  - key: code
    val: 403
    threshold: 10
    operator: lte
  - key: code
    val: 404
    threshold: 10
    operator: lte
  - key: code
    val: 500
    threshold: 10
    operator: lte
  - key: code
    val: 504
    threshold: 10
    operator: lte
- query: 'sum(apiserver_current_inflight_requests) by (request_kind)'
  watchFor:
  - key: request_kind
    val: mutating
    threshold: 10
    operator: lte
  - key: request_kind
    val: readOnly
    threshold: 100
    operator: lte
- query: 'sum(rate(apiserver_dropped_requests_total[5m])) by (request_kind)'
  watchFor:
  - key: request_kind
    val: mutating
    threshold: 10
    operator: lte
  - key: request_kind
    val: readOnly
    threshold: 100
    operator: lte
- query: 'sum(apiserver_flowcontrol_current_inqueue_requests)'  # Pending request count
  watchFor:
  - key: nil
    val: nil
    threshold: 10
    operator: lte
- query: 'max((etcd_mvcc_db_total_size_in_bytes{} / etcd_server_quota_backend_bytes{})*100)' # Max % DB Space used across all nodes of etcd
  watchFor:
  - key: nil
    val: nil
    threshold: 90
    operator: lte
- query: 'etcd_server_has_leader'
  watchFor:
  - key: nil
    val: nil
    threshold: 1
    operator: eq
- query: 'etcd_server_health_failures'
  watchFor:
  - key: nil
    val: nil
    threshold: 0
    operator: lte
- query: 'etcd_server_health_failures'
  watchFor:
  - key: nil
    val: nil
    threshold: 1
    operator: lte
- query: 'sum(rate(etcd_server_leader_changes_seen_total[2m]))'
  watchFor:
  - key: nil
    val: nil
    threshold: 5
    operator: lte
# Metrics of Interest: ovnkube_master_requeue_service_total, ovnkube_master_skipped_nbctl_daemon_total, ovnkube_master_sync_service_total, max(ovnkube_master_ovn_cli_latency_seconds_count) by (command)
#                      max(ovnkube_master_pod_creation_latency_seconds_bucket), ovnkube_master_workqueue_depth, max(ovnkube_master_workqueue_retries_total),ovnkube_node_cni_request_duration_seconds_count